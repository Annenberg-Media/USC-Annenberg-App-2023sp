name: Build iOS

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  ios-build:
    runs-on: macos-latest
    name: Build iOS app
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Remove Podfile.lock
        run: |
          rm ios/Podfile.lock

      - name: Install app dependencies
        run: |
          npm install
          npx install-expo-modules

      - name: Set up XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup CocoaPods
        run: gem install cocoapods

      - name: install Cocoapod dependencies
        run: |
            cd ios
            pod install --repo-update

      - name: Test config file exists
        run: |
          cd /Users/runner/work/USC-Annenberg-App-2023sp/USC-Annenberg-App-2023sp/ios/Pods/Target Support Files/Pods-AnnenbergMedia/
          ls -la

      - name: Build project
        run: xcodebuild -workspace './AnnenbergMedia.xcworkspace' -scheme AnnenbergMedia -destination generic/platform=iOS -archivePath App.xcarchive archive

      - name: üçª Assemble IPA
        run: xcodebuild archive -archivePath AnnenbergMedia.xcarchive -exportArchive -exportOptionsPlist ./archive.plist -exportPath output -allowProvisioningUpdates

      - name: Upload release bundle
        uses: actions/upload-artifact@v4
        with:
          name: app-ios
          path: output/
          retention-days: 60